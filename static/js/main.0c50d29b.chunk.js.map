{"version":3,"sources":["assets/abbu.jpg","assets/bb.jpg","assets/uncle.jpg","email.jpg","call.jpg","data/associates.js","Associates.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PEOPLE","id","title","image","abbu","bb","uncle","Project","this","props","project","style","display","width","margin","src","alt","className","Component","Projects","map","App","paddingTop","paddingBottom","marginLeft","marginRight","marginBottom","backgroundColor","href","email","height","call","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,mPCoB5BC,EAfA,CACX,CAACC,GAAI,EACJC,MAAO,+BACPC,MAAOC,KAER,CAACH,GAAI,EACJC,MAAO,4BACPC,MAAOE,KAER,CAACJ,GAAI,EACJC,MAAO,2BACPC,MAAOG,MCbNC,E,iLACO,IAAD,EACkBC,KAAKC,MAAMC,QAA3BP,EADF,EACEA,MAAOD,EADT,EACSA,MACb,OACI,yBAAKS,MAAO,CAAEC,QAAS,eAAgBC,MAAO,IAAKC,OAAQ,KACvD,gCACA,yBAAKC,IAAKZ,EAAOa,IAAI,UAAUC,UAAU,YACzC,oCAAY,4BAAKf,U,GAPXgB,aAmCPC,E,iLAjBP,OACI,6BACA,yBAAKF,UAAU,OAAM,mDAArB,KACJ,6BAEIjB,EAAOoB,IAAI,SAAApB,GACX,OACA,kBAAC,EAAD,CAASU,QAASV,Y,GATPkB,a,kCC0BRG,MAtCf,WACE,OACE,6BACC,gDACA,yBAAKV,MAAO,CAACW,WAAY,GAAIC,cAAe,GAAIC,WAAY,IAAKC,YAAa,MAA9E,yUAMA,8BACE,6BACG,kBAAE,EAAF,OAIN,yBAAKd,MAAO,CAACe,aAAa,KAAK,6CAG/B,yBAAKf,MAAO,CAAEC,QAAS,eAAgBK,UAAW,aAAcU,gBAAiB,UAAWd,MAAO,SACnG,uBAAGe,KAAK,2BACI,gCACA,yBAAKb,IAAKc,IAAOb,IAAI,iBAAiBL,MAAO,CAAEE,MAAO,GAAIiB,OAAQ,GAAIhB,OAAQ,MAC9E,oCAAY,wCAIZ,gCACA,yBAAKC,IAAKgB,IAAMf,IAAI,iBAAiBL,MAAO,CAAEE,MAAO,GAAIiB,OAAQ,GAAIhB,OAAQ,MAC7E,oCAAY,uDCxBRkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.0c50d29b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/abbu.e3a0ccc4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bb.49b89b53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uncle.8933e750.jpg\";","module.exports = __webpack_public_path__ + \"static/media/email.3aba56da.jpg\";","module.exports = __webpack_public_path__ + \"static/media/call.5ffd8424.jpg\";","import abbu from '../assets/abbu.jpg';\r\nimport bb from '../assets/bb.jpg';\r\nimport uncle from '../assets/uncle.jpg';\r\n\r\n\r\nconst PEOPLE = [\r\n    {id: 1,\r\n     title: 'Advocate Kazi Eklasur Rahman',\r\n     image: abbu\r\n    },\r\n    {id: 2,\r\n     title: 'Barrister Kazi Abdul Muid',\r\n     image: bb\r\n    },\r\n    {id: 3,\r\n     title: 'Advocate Kazi Abdul Azim',\r\n     image: uncle\r\n    }\r\n];\r\n\r\nexport default PEOPLE;","import React, {Component} from 'react';\r\nimport PEOPLE from './data/associates.js';\r\n\r\nclass Project extends Component{\r\n    render(){\r\n        const{image, title} = this.props.project;\r\n        return(\r\n            <div style={{ display: 'inline-block', width: 300, margin: 40}}>\r\n                <figure>\r\n                <img src={image} alt='profile' className=\"profile\"/>\r\n                <figcaption><h3>{title}</h3></figcaption>\r\n                </figure>\r\n           </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Projects extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n            <div className=\"Bag\"><h2 >Meet Our Associates</h2> </div>\r\n        <div>            \r\n           {\r\n            PEOPLE.map(PEOPLE => {\r\n            return(\r\n            <Project project={PEOPLE}/>\r\n            );\r\n        })\r\n    }     \r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n    }\r\n\r\nexport default Projects;","import React from 'react';\nimport './App.css';\nimport Project from './Associates';\nimport email from './email.jpg';\nimport call from './call.jpg';\n\n\nfunction App() {\n  return (\n    <div>\n     <h1>  Kazi Law Firm </h1>\n     <div style={{paddingTop: 50, paddingBottom: 30, marginLeft: 150, marginRight: 150}}>\n     Welcome to the Paragraph Four Report(r).\n     Here, we bring some clarity to the confusion surrounding the world of generic drug approval process,\n    Paragraph IV certifications, and patent challenges.\n     There is an ever-increasing degree of activity in this area which means that things have gotten a bit more difficult to understand.\n     </div>\n     <body>\n       <div >\n          < Project />\n          </div>\n\n\n    <div style={{marginBottom:20}}><h2>Contact Us!</h2></div>\n    </body>\n\n    <div style={{ display: 'inline-block', className: 'center-div', backgroundColor: '#f0f0f0', width: '100%'}}>\n    <a href='mailto:muid92@gmail.com'>\n                <figure>\n                <img src={email} alt='social-profile' style={{ width: 50, height: 50, margin: 10 }} />\n                <figcaption><h3>Email</h3></figcaption>\n                </figure>\n    </a>\n\n                <figure>\n                <img src={call} alt='social-profile' style={{ width: 50, height: 50, margin: 10 }} />\n                <figcaption><h3>Phone: 01731975333</h3></figcaption>\n                </figure>\n           </div>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}